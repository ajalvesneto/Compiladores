/* This file was generated by SableCC (http://www.sablecc.org/). */

package Lexico.parser;

import Lexico.node.*;
import Lexico.analysis.*;

class TokenIndex extends AnalysisAdapter
{
    int index;

    public void caseTScolon(TScolon node)
    {
        index = 0;
    }

    public void caseTComman(TComman node)
    {
        index = 1;
    }

    public void caseTLsbrack(TLsbrack node)
    {
        index = 2;
    }

    public void caseTRsbrack(TRsbrack node)
    {
        index = 3;
    }

    public void caseTInt(TInt node)
    {
        index = 4;
    }

    public void caseTChar(TChar node)
    {
        index = 5;
    }

    public void caseTFloat(TFloat node)
    {
        index = 6;
    }

    public void caseTLpar(TLpar node)
    {
        index = 7;
    }

    public void caseTRpar(TRpar node)
    {
        index = 8;
    }

    public void caseTVoid(TVoid node)
    {
        index = 9;
    }

    public void caseTLcbrack(TLcbrack node)
    {
        index = 10;
    }

    public void caseTRcbrack(TRcbrack node)
    {
        index = 11;
    }

    public void caseTAtrib(TAtrib node)
    {
        index = 12;
    }

    public void caseTIf(TIf node)
    {
        index = 13;
    }

    public void caseTWhile(TWhile node)
    {
        index = 14;
    }

    public void caseTFor(TFor node)
    {
        index = 15;
    }

    public void caseTForeach(TForeach node)
    {
        index = 16;
    }

    public void caseTColon(TColon node)
    {
        index = 17;
    }

    public void caseTReturn(TReturn node)
    {
        index = 18;
    }

    public void caseTElse(TElse node)
    {
        index = 19;
    }

    public void caseTNint(TNint node)
    {
        index = 20;
    }

    public void caseTNreal(TNreal node)
    {
        index = 21;
    }

    public void caseTString(TString node)
    {
        index = 22;
    }

    public void caseTLchar(TLchar node)
    {
        index = 23;
    }

    public void caseTNew(TNew node)
    {
        index = 24;
    }

    public void caseTMinus(TMinus node)
    {
        index = 25;
    }

    public void caseTPlus(TPlus node)
    {
        index = 26;
    }

    public void caseTTimes(TTimes node)
    {
        index = 27;
    }

    public void caseTDiv(TDiv node)
    {
        index = 28;
    }

    public void caseTEqual(TEqual node)
    {
        index = 29;
    }

    public void caseTLequal(TLequal node)
    {
        index = 30;
    }

    public void caseTGequal(TGequal node)
    {
        index = 31;
    }

    public void caseTLess(TLess node)
    {
        index = 32;
    }

    public void caseTGreater(TGreater node)
    {
        index = 33;
    }

    public void caseTNot(TNot node)
    {
        index = 34;
    }

    public void caseTAnd(TAnd node)
    {
        index = 35;
    }

    public void caseTOr(TOr node)
    {
        index = 36;
    }

    public void caseTPalavra(TPalavra node)
    {
        index = 37;
    }

    public void caseEOF(EOF node)
    {
        index = 38;
    }
}
