/* This file was generated by SableCC (http://www.sablecc.org/). */

package Lexico.node;

import java.util.*;
import Lexico.analysis.*;

public final class AProgram extends PProgram
{
    private TPalavra _palavra_;
    private TScolon _scolon_;

    public AProgram()
    {
    }

    public AProgram(
        TPalavra _palavra_,
        TScolon _scolon_)
    {
        setPalavra(_palavra_);

        setScolon(_scolon_);

    }
    public Object clone()
    {
        return new AProgram(
            (TPalavra) cloneNode(_palavra_),
            (TScolon) cloneNode(_scolon_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAProgram(this);
    }

    public TPalavra getPalavra()
    {
        return _palavra_;
    }

    public void setPalavra(TPalavra node)
    {
        if(_palavra_ != null)
        {
            _palavra_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _palavra_ = node;
    }

    public TScolon getScolon()
    {
        return _scolon_;
    }

    public void setScolon(TScolon node)
    {
        if(_scolon_ != null)
        {
            _scolon_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _scolon_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_palavra_)
            + toString(_scolon_);
    }

    void removeChild(Node child)
    {
        if(_palavra_ == child)
        {
            _palavra_ = null;
            return;
        }

        if(_scolon_ == child)
        {
            _scolon_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_palavra_ == oldChild)
        {
            setPalavra((TPalavra) newChild);
            return;
        }

        if(_scolon_ == oldChild)
        {
            setScolon((TScolon) newChild);
            return;
        }

    }
}
